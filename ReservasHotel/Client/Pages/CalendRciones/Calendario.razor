@page "/Calendario"

@inject IHttpService http

<h3>Calendario de habitaciones</h3>

<br />

<table class="table table-bordered">
    <thead style="background-color:#D8E7F8">
        <tr>
            <th>Num Hab </th>
           @foreach(var lista in reservaciones)
           {
              @foreach (var dias in lista)
              {
                  <th>@dias.Fecha.ToShortDateString()</th>
              } 
              break;
           }
        </tr>
    </thead>
    <tbody>
        @foreach (var lista in reservaciones)
       {
        <tr>
           <th>@lista[0].HabitacionId</th>
           @foreach (var item in lista)
           {
               @if (item.ReservaId==0)
               {
                    <td style= "background-color:#A0F981">Libre</td>
               }
               else
               {
                   <td style= "background-color:#FD5050">@item.ReservaId</td>
               }
            }
        </tr>
       }
    </tbody>
</table>


@code {
    List<List<Reservacion>> reservaciones = new List<List<Reservacion>>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await disponibilidad();
    }

    private async Task disponibilidad()
    {
        var respuesta = await http.Get<List<List<Reservacion>>>("api/Fechas");
        if (!respuesta.Error)
        {
            reservaciones = respuesta.Respuesta;
            Console.WriteLine($"res desde calendario {reservaciones.Count}");
            Console.WriteLine($"dias desde calendario {reservaciones[0].Count}");
        }
    }
}

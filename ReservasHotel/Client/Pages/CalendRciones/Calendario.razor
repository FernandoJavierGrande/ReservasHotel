@page "/Calendario"

@inject IHttpService http

<h3>Calendario de habitaciones</h3>

<div class="form-control-sm">
     <a class = "btn btn-primary" href="NuevaReserva"> Agregar reserva </a>
</div>

<div class="form-control">
    <button class=" oi oi-arrow-circle-left" @onclick="DismFecha"></button>
    <button class=" oi oi-arrow-circle-right" @onclick="AumentarFecha"></button>
    <input type="number" class="form-control-sm" @bind=@cant_dias @onclick="disponibilidad"/>
</div>   

<br />
<table class="table table-bordered">
    <thead style="background-color:#D8E7F8">
        <tr>
            <th>Num Hab </th>
           @foreach(var lista in reservaciones) // lee los elementos de la primera fila
           {
              @foreach (var dias in lista)
              {
                  <th>@dias.Fecha.ToShortDateString()</th>
              } 
              break;
           }
        </tr>
    </thead>
    <tbody>
        @foreach (var lista in reservaciones)
       {
        <tr>
           <th>@lista[0].HabitacionId</th>
           @foreach (var item in lista)
           {
               @if (item.ReservaId==0)
               {
                    <td style= "background-color:#A0F981">Libre</td>
               }
               else
               {
                   <td style= "background-color:#FD5050">@item.ReservaId</td>
                   @if(!idsRes.Contains(item.ReservaId)) {idsRes.Add(item.ReservaId);};
               }
            }
        </tr>
       }
    </tbody>
</table>
<br />

<div>
    <div>
        <label> buscar reserva por codigo</label>
    </div>
        <input type="number" class="form-control-sm" @bind=@reservaConsultar/>
        <a class="btn btn-primary" href="/Reservas/Editar/@reservaConsultar"> Buscar</a>
</div>




@code {
    List<List<Reservacion>> reservaciones = new List<List<Reservacion>>();
    List<int> idsRes = new List<int>();//?
    private int reservaConsultar=0;
    private DateTime fecha_Seleccion;
    int cant_dias = 7;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        fecha_Seleccion = DateTime.Today.Date;
        await disponibilidad();
    }

    private async Task disponibilidad()
    {
        string fecha = $"{fecha_Seleccion.Year.ToString()}-{fecha_Seleccion.Month.ToString()}-{fecha_Seleccion.Day.ToString()}";

        Console.WriteLine($"fecha = {fecha}");
        var respuesta = await http.Get<List<List<Reservacion>>>($"api/Fechas/{fecha}?dias={cant_dias}");
        if (!respuesta.Error)
        {
            reservaciones = respuesta.Respuesta;
            StateHasChanged();

        }
    }
    private async Task AumentarFecha()//paginacion
    {
        fecha_Seleccion = fecha_Seleccion.AddDays(cant_dias);
        await disponibilidad();
    }
    private void DismFecha()//paginacion
    {
        fecha_Seleccion = fecha_Seleccion.AddDays(-(cant_dias));
        disponibilidad();
    }
}
